/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 models/stickman/raw/scene.gltf transform -t 
Author: studentsimf (https://sketchfab.com/studentsimf)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/stickman-low-poly-12b31ea386ee4398a552d15c01615ae9
Title: Stickman Low Poly
*/

import * as THREE from "three";
import React from "react";
import { ThreeElements, useGraph } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { GLTF, SkeletonUtils } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_6: THREE.SkinnedMesh;
    _rootJoint: THREE.Bone;
  };
  materials: {
    material: THREE.MeshStandardMaterial;
  };
  animations: THREE.AnimationClip[];
};

export function Model(props: ThreeElements["group"]) {
  const { scene } = useGLTF("/models/stickman/raw/stickman.gltf");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone) as unknown as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes._rootJoint} />
      <skinnedMesh
        geometry={nodes.Object_6.geometry}
        material={materials.material}
        skeleton={nodes.Object_6.skeleton}
      />
    </group>
  );
}
useGLTF.preload("/models/stickman/raw/stickman.gltf");
